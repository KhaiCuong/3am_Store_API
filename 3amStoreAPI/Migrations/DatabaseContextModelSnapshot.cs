// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _3amStoreAPI.Model;

#nullable disable

namespace _3amStoreAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("_3amStoreAPI.Model.CategoryModel", b =>
                {
                    b.Property<string>("category_id")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("category_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.FeedbackModel", b =>
                {
                    b.Property<string>("product_id")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("start")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("product_id", "user_id");

                    b.HasIndex("user_id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.OrderDetailModel", b =>
                {
                    b.Property<string>("product_id")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<int>("detail_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("detail_id"), 1L, 1);

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("produc_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("product_id", "order_id");

                    b.HasIndex("order_id");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.OrderModel", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_id"), 1L, 1);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("order_id");

                    b.HasIndex("user_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.ProductImageModel", b =>
                {
                    b.Property<int>("image_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("image_id"), 1L, 1);

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("image_id");

                    b.HasIndex("product_id");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.ProductModel", b =>
                {
                    b.Property<string>("product_id")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("category_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("instock")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("produc_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("product_id");

                    b.HasIndex("category_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.UserModel", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.FeedbackModel", b =>
                {
                    b.HasOne("_3amStoreAPI.Model.ProductModel", "product")
                        .WithMany("feedback")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_3amStoreAPI.Model.UserModel", "user")
                        .WithMany("feedback")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.OrderDetailModel", b =>
                {
                    b.HasOne("_3amStoreAPI.Model.OrderModel", "order")
                        .WithMany("detail")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_3amStoreAPI.Model.ProductModel", "product")
                        .WithMany("detail")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.OrderModel", b =>
                {
                    b.HasOne("_3amStoreAPI.Model.UserModel", "user")
                        .WithMany("order")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.ProductImageModel", b =>
                {
                    b.HasOne("_3amStoreAPI.Model.ProductModel", "product")
                        .WithMany("product_image")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.ProductModel", b =>
                {
                    b.HasOne("_3amStoreAPI.Model.CategoryModel", "category")
                        .WithMany("product")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.CategoryModel", b =>
                {
                    b.Navigation("product");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.OrderModel", b =>
                {
                    b.Navigation("detail");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.ProductModel", b =>
                {
                    b.Navigation("detail");

                    b.Navigation("feedback");

                    b.Navigation("product_image");
                });

            modelBuilder.Entity("_3amStoreAPI.Model.UserModel", b =>
                {
                    b.Navigation("feedback");

                    b.Navigation("order");
                });
#pragma warning restore 612, 618
        }
    }
}
